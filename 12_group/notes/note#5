결정트리란?
분류, 회귀 둘다 가능, 다중출력 작업이 가능한 머신러닝
최대 장점 : 데이터 전처리가 불필요하다는 점
그렇다면 단점도 있는지? -> 과적합에 빠지기 쉽다?

max_depth 는 최대 2까지만 가능?
-> 깊이가 깊어지면 과적합이 될 가능성이 있으므로 적절한 조절이 필요함

트리의 성장을 위한 CART 알고리즘

연습문제

a. make_moons 사용해야되니 패키지를 불러와야됨
from sklearn.datasets import make_moons
주어진 조건으로 데이터셋 생성
X, y = make_moons(n_samples=1000, noise=0.4, random_state=42)
여기서 random_state = 42 에 대해 왜 굳이 42를 쓰는지에 대한 의문을 가짐
-> 큰 의미는 없고 그냥 0, 1, 42 를 주로 쓴다고 합니다. 숫자를 쓰는것보다 None 으로 둘지 정수를 넣을지가 더 중요

b. train_test_split() 사용을 위한 패키지 불러오기
from sklearn.model_selection import train_test_split
이후 훈련세트와 테스트 세트로 나눔
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
전체 데이터셋의 20%를 테스트셋으로 지정

c. GridSearchCV 사용을 위한 패키지 불러오기
from sklearn.model_selection import GridSearchCV
그전에 그리드 서치란...?
- 최적의 파라미터값을 찾기 위해 범위를 지정하고 해당 범위 내에서 최적의 값을 찾음
그러면 찾을 파라미터값의 범위를 지정해줘야됨
max_leaf_nodes 의 리스트를 range(2,100) 으로 설정 (이 부분은 정답을 조금 참고했습니다..) 해당 범위내에서 최적의 파라미터값을 찾는 과정을 수행

d. 정확도 출력을 위한 패키지 불러오기
from sklearn.metrics import accuracy_score

c에서 찾은 파라미터값을 이용하여 y의 예측값 출력
y_pred = grid_search_cv.predict(X_test)
accuracy_score(y_test, y_pred)
